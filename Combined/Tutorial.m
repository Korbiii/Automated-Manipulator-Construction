%% Tutorial XX: Generate Single Port Manipulators

%% Motivation for this tutorial: 

%% Introduced Function:
% * SGmanipulator - Generates a single port manipulator.

%% Generating simplest Manipulator
% Simplest Manipulator structure
SGmanipulator({PLcircle(5)},...     CPL to define contour of arm
                          3,...     Diameter for tool channel at [0 0]
                          0,...     Orientation of hinge
                         15,...     Section length 
                     'tip');        ...Flag to not generate shaft
view(90,30);

%% Orientation angle
% Orientation angle changes the orientation of the rotation axis of the hinge
SGmanipulator({PLcircle(5)},...     
                          3,...     
                         30,...     Previous Example with 30 degree orientation angle. Value range: -180 to 180.
                         15,...     
                     'tip');        
view(90,30);

%% Deflection angles
% Besides orientation angle the deflection angles of a section can be specified.
SGmanipulator({PLcircle(5)},...     
                          3,...     
                  [0 45 90],...     [Deflection angle 1, Deflection angle 2]    
                         15,...     
                     'tip');        
view(90,30);


%% Optimizing for one deflection direction
% The hinge can be optimized for one rotation direction.
SGmanipulator({PLcircle(5)},...     
                          3,...     
                [0 45 90 1],...     Angle flag set to 1 optimizes hinge position for second deflection angle. First angle gets ignored. -1 for the first angle.
                         15,...     
                     'tip');        
view(90,0);

%% Alternating Sections.
% The fourth angle parameter set to 2 generates alternating sections.
SGmanipulator({PLcircle(5)},...    
                          3,...     
                [0 90 90 2],...     Angle flag set to 2 generates an alternating section. Second angle is offset 90 degrees to the original angle. 
                         15,...     
                     'tip');        
view(90,30);

%% Element Height
% With the argument after section length the element height can be altered.
SGmanipulator({PLcircle(5)},...    
                          3,...     
                          0,...      
                     [15 4],...     Element height set to 4. Default is 2. 
                     'tip');        
view(90,0); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Hinge width
% The second argument behind section lengths specifies the hinge width.
SGmanipulator({PLcircle(5)},...    
                          3,...     
                          0,...      
                   [15 4 2],...     Hinge width set to 2. Default is 0.6
                     'tip');        
view(90,0); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Hinge length
% The third argument behind section lengths specifies the hinge length.
SGmanipulator({PLcircle(5)},...    
                          3,...     
                          0,...      
                 [15 4 2 1],...     Hinge length set to 2. Default is 2. Setting this value to 0 projects the hinge over the whole element.
                     'tip');        
view(0,0); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Hinge Diameter
% The fourth argument behind section lengths specifies the hinge diameter and therefor its height.
SGmanipulator({PLcircle(5)},...    
                          3,...     
                          0,...      
               [15 4 2 1 2],...     Hinge Diamater set to 2. Default is 0.5.
                     'tip');        
view(90,0); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Multiple Sections
% To generate multiple sections per arm an angle and length value need to be set for eacb section.
SGmanipulator({PLcircle(6)},...    
                          3,...     
                      [0;90],...    Second angle value.
                     [15;10],...    Second length value.
                       'tip');        
view(90,30);

%% Shaft length
% Specify the length of the shaft after the element for the crimps.
SGmanipulator({PLcircle(5)},...     
                          3,...     
                          0,...     
                         15,...     
                   'length',5);        ...Parameter to set shaft length. Value is Multiples of 10mm.
view(90,0);

%% Flexible Shaft
% Specify the length of the shaft after the element for the crimps.
SGmanipulator({PLcircle(5)},...     
                          3,...     
                          0,...     
                         15,...
                   'flex',30,...        Flex flag generates a flexible shaft. An angle value has to be given for pre deflecting the flexible shaft.
                   'length',10);        ...Parameter to set shaft length
view(90,30);delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Four arm manipulator
% Up to four arms the arms will be positioned in a predefined way for optimal space usuage.
CPL = PLcircle(5);
SGmanipulator({{CPL},{CPL},{CPL},{CPL}},...     
                              [3;3;3;3],...     
                              {0,0,0,0},...     
                           {15,12,15,12},...     
                   'length',5);        ...Parameter to set shaft length
view(50,50); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Multiple arms
% For more than 4 arms the arms will be placed in a circular pattern. 
CPL = PLcircle(5);
SGmanipulator({{CPL},{CPL},{CPL},{CPL},{CPL}},...     
                                  [3;3;3;3;3],...     
                             {90,90,90,90,90},...     
                             {15,12,15,12,12},...  
                                     'radial',...     Radial flag must not be used, if number of arms is greater than 4.
                                  'length',5);        ...Parameter to set shaft length
view(50,50); delete(findobj('type', 'patch','FaceAlpha',0.3));

%% Example for endoscopic manipulator
%
CPL = PLtrans(PLkidney(9.5,14.5,pi/5.5),[-12 0]);
CPL2 = PLtrans(PLkidney(9.5,14.5,pi/6.5),[-12 0]);
CPL3 = PLtrans(PLkidney(9.5,14.5,pi/8.5),[-12 0]);

SGmanipulator({{CPL;CPL2;CPL3},{CPL;CPL2;CPL3}},...
    [2;2],...
    {[90 10 50 0;0 60 60 0;90 90 180 0],...
    [90 10 50 0;0 60 60 0;90 90 180 0]},...
    {[7;7;7],...
    [7;7;7]},...
    'single',...
    'optic_mid',...
    'optic_radius',4,...
    'flex',0,...
    'length',10);
delete(findobj('type', 'patch','FaceAlpha',0.3));






